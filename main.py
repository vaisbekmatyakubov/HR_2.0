# -*- coding: utf-8 -*-
import streamlit as st
from docx import Document
from io import BytesIO
import datetime
from babel.dates import format_date
import locale

# --- Streamlit –°–∞“≥–∏—Ñ–∞ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è—Å–∏ ---
st.set_page_config(layout="wide", page_title="–•–∏–∑–º–∞—Ç –°–∞—Ñ–∞—Ä–∏ “≤–∏—Å–æ–±–æ—Ç–∏ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∏")

# --- –õ–æ–∫–∞–ª–Ω–∏ —û—Ä–Ω–∞—Ç–∏—à ---
try:
    locale.setlocale(locale.LC_TIME, 'uz_UZ.UTF-8') # Linux/macOS
    BABEL_LOCALE = 'uz_UZ_cyrl'
except locale.Error:
    try:
        locale.setlocale(locale.LC_TIME, 'uz_UZ_cyrl.UTF-8') # –ë–∞—ä–∑–∏ —Ç–∏–∑–∏–º–ª–∞—Ä —É—á—É–Ω
        BABEL_LOCALE = 'uz_UZ_cyrl'
    except locale.Error:
        BABEL_LOCALE = 'en_US' # –ó–∞—Ö–∏—Ä–∞ –ª–æ–∫–∞–ª

# --- –®–∞–±–ª–æ–Ω–Ω–∏ —Ç—û–ª–¥–∏—Ä–∏—à —Ñ—É–Ω–∫—Ü–∏—è—Å–∏ ---
def generate_report(template_path, output_name, data):
    """
    Word —à–∞–±–ª–æ–Ω–∏–Ω–∏ –±–µ—Ä–∏–ª–≥–∞–Ω –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä –±–∏–ª–∞–Ω —Ç—û–ª–¥–∏—Ä–∞–¥–∏ –≤–∞
    —Ö–æ—Ç–∏—Ä–∞–¥–∞–≥–∏ —Ñ–∞–π–ª –±—É—Ñ–µ—Ä–∏–Ω–∏ “õ–∞–π—Ç–∞—Ä–∞–¥–∏.
    """
    try:
        doc = Document(template_path)
    except Exception as e:
        st.error(f"–®–∞–±–ª–æ–Ω —Ñ–∞–π–ª–∏–Ω–∏ —û“õ–∏—à–¥–∞ —Ö–∞—Ç–æ–ª–∏–∫ ({template_path}): {e}")
        st.error("–ò—à–æ–Ω—á “≥–æ—Å–∏–ª “õ–∏–ª–∏–Ω–≥–∫–∏, —Ñ–∞–π–ª –º–∞–≤–∂—É–¥ –≤–∞ —Ç—û“ì—Ä–∏ —Ñ–æ—Ä–º–∞—Ç–¥–∞.")
        return None

    def format_uzbek_date(date_obj):
        if date_obj:
            try:
                return format_date(date_obj, format='d MMMM<y_bin_46> \'–π–∏–ª\'', locale=BABEL_LOCALE)
            except Exception as e:
                return date_obj.strftime('%d.%m.%Y')
        return ""

    buyruq_sanasi_str = format_uzbek_date(data['buyruq_sanasi'])
    safar_boshlanish_str = format_uzbek_date(data['safar_boshlanish'])
    safar_tugash_str = format_uzbek_date(data['safar_tugash'])
    hisobot_sanasi_str = format_uzbek_date(data['hisobot_sanasi'])

    buyruq_r_s = f"{data['buyruq_raqami']}-—Å–æ–Ω–ª–∏ {buyruq_sanasi_str}–¥–∞–≥–∏" if data['buyruq_raqami'] and data['buyruq_sanasi'] else ""
    sanalar = f"{safar_boshlanish_str} –¥–∞–Ω {safar_tugash_str} –≥–∞—á–∞" if data['safar_boshlanish'] and data['safar_tugash'] else ""
    maqsadlar_text = "\n".join([f"‚Äì {m}" for m in data['maqsadlar'] if m.strip()])
    natijalar_text = "\n".join([f"‚Äì {n}" for n in data['safar_natijalari'] if n.strip()])

    kunlik_hisobot_text = ""
    for i, report in enumerate(data['kunlik_hisobotlar']):
        kun_nomi = report.get('kun_nomi', f"{i+1}-–∫—É–Ω")
        kun_sanasi_str = format_uzbek_date(report.get('kun_sanasi'))
        tavsif = report.get('tavsif', '')
        if tavsif.strip():
             kunlik_hisobot_text += f"{kun_nomi} ({kun_sanasi_str}):\n{tavsif}\n\n"

    replacements = {
        "{{LAVOZIM_FIO}}": f"{data['lavozim']} {data['fio']}",
        "{{MANZIL}}": data['manzil'],
        "{{BUYRUQ_R_S}}": buyruq_r_s,
        "{{SANALAR}}": sanalar,
        "{{MAQSADLAR}}": maqsadlar_text,
        "{{UMUMIY_QISM}}": data['umumiy_qism'], # –Ø–ù–ì–ò: –£–º—É–º–∏–π “õ–∏—Å–º “õ—û—à–∏–ª–¥–∏
        "{{KUNLIK_HISOBOT}}": kunlik_hisobot_text.strip(),
        "{{SAFAR_NATIJALARI}}": natijalar_text,
        "{{BOLIM_BOSHLIGI_LAVOZIMI}}": data['bolim_boshligi_lavozimi'],
        "{{BOLIM_BOSHLIGI_FIO}}": data['bolim_boshligi_fio'],
        "{{HISOBOT_SANASI}}": hisobot_sanasi_str,
    }

    # Placeholder'–ª–∞—Ä–Ω–∏ –∞–ª–º–∞—à—Ç–∏—Ä–∏—à
    for p in doc.paragraphs:
        # –ë—É—Ç—É–Ω –ø–∞—Ä–∞–≥—Ä–∞—Ñ placeholder'–≥–∞ —Ç–µ–Ω–≥ –±—û–ª—Å–∞ (–º–∞—Å–∞–ª–∞–Ω, {{MAQSADLAR}}, {{UMUMIY_QISM}})
        if p.text.strip() in replacements:
             key = p.text.strip()
             p.text = str(replacements[key])
             # –≠—Å–∫–∏ run'–ª–∞—Ä–Ω–∏ —Ç–æ–∑–∞–ª–∞—à (—Ñ–æ—Ä–º–∞—Ç —Å–∞“õ–ª–∞–Ω–º–∞—Å–ª–∏–≥–∏ –º—É–º–∫–∏–Ω)
             for run in p.runs[1:]: run.clear()
             if p.runs: p.runs[0].text = str(replacements[key])
        else:
             # Placeholder –ø–∞—Ä–∞–≥—Ä–∞—Ñ –∏—á–∏–¥–∞ –±—û–ª—Å–∞
             inline = p.runs
             full_text = "".join(run.text for run in inline)
             changed = False
             for key, value in replacements.items():
                 if key in full_text:
                     full_text = full_text.replace(key, str(value))
                     changed = True
             if changed:
                  for i in range(len(p.runs)): p.runs[i].text = ''
                  if p.runs: p.runs[0].text = full_text
                  else: p.add_run(full_text)

    # –ñ–∞–¥–≤–∞–ª–ª–∞—Ä–¥–∞ –∞–ª–º–∞—à—Ç–∏—Ä–∏—à
    for table in doc.tables:
        for row in table.rows:
            for cell in row.cells:
                for p in cell.paragraphs:
                    if p.text.strip() in replacements:
                         key = p.text.strip()
                         p.text = str(replacements[key])
                         for run in p.runs[1:]: run.clear()
                         if p.runs: p.runs[0].text = str(replacements[key])
                    else:
                         inline = p.runs
                         full_text = "".join(run.text for run in inline)
                         changed = False
                         for key, value in replacements.items():
                             if key in full_text:
                                 full_text = full_text.replace(key, str(value))
                                 changed = True
                         if changed:
                             for i in range(len(p.runs)): p.runs[i].text = ''
                             if p.runs: p.runs[0].text = full_text
                             else: p.add_run(full_text)

    buffer = BytesIO()
    doc.save(buffer)
    buffer.seek(0)
    return buffer

# --- Streamlit –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∏ ---
st.title("üìÑ –•–∏–∑–º–∞—Ç –°–∞—Ñ–∞—Ä–∏ “≤–∏—Å–æ–±–æ—Ç–∏ –ê–≤—Ç–æ-—Ç—û–ª–¥–∏—Ä—É–≤—á–∏—Å–∏")

# --- –°–µ—Å—Å–∏—è “≥–æ–ª–∞—Ç–∏–Ω–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è “õ–∏–ª–∏—à ---
if 'maqsadlar' not in st.session_state:
    st.session_state.maqsadlar = [""]
if 'safar_natijalari' not in st.session_state:
    st.session_state.safar_natijalari = [""]
if 'kunlik_hisobotlar' not in st.session_state:
    st.session_state.kunlik_hisobotlar = [{'kun_nomi': '–ë–∏—Ä–∏–Ω—á–∏ –∫—É–Ω', 'kun_sanasi': None, 'tavsif': ''}]
# –ê—Å–æ—Å–∏–π –º–∞–π–¥–æ–Ω–ª–∞—Ä —É—á—É–Ω –∫–∞–ª–∏—Ç–ª–∞—Ä (—Ñ–æ—Ä–º–∞—Å–∏–∑ –∏—à–ª–∞—à —É—á—É–Ω)
if 'main_fio' not in st.session_state: st.session_state.main_fio = ""
if 'main_lavozim' not in st.session_state: st.session_state.main_lavozim = ""
if 'main_manzil' not in st.session_state: st.session_state.main_manzil = ""
if 'main_buyruq_raqami' not in st.session_state: st.session_state.main_buyruq_raqami = ""
if 'main_buyruq_sanasi' not in st.session_state: st.session_state.main_buyruq_sanasi = None
if 'main_safar_boshlanish' not in st.session_state: st.session_state.main_safar_boshlanish = None
if 'main_safar_tugash' not in st.session_state: st.session_state.main_safar_tugash = None
if 'main_bolim_boshligi_lavozimi' not in st.session_state: st.session_state.main_bolim_boshligi_lavozimi = ""
if 'main_bolim_boshligi_fio' not in st.session_state: st.session_state.main_bolim_boshligi_fio = ""
if 'main_hisobot_sanasi' not in st.session_state: st.session_state.main_hisobot_sanasi = datetime.date.today()
if 'main_umumiy_qism' not in st.session_state: st.session_state.main_umumiy_qism = "" # –Ø–ù–ì–ò: –£–º—É–º–∏–π “õ–∏—Å–º —É—á—É–Ω


# --- –§–∞–π–ª –Ω–æ–º–ª–∞—Ä–∏ ---
TEMPLATE_FILE = 'template_modified.docx'
DEFAULT_OUTPUT_FILENAME = "Tayyor_Hisobot.docx"

# --- –ê—Å–æ—Å–∏–π –ú–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä (–§–æ—Ä–º–∞—Å–∏–∑) ---
st.subheader("üìù –°–∞—Ñ–∞—Ä –ú–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä–∏ –≤–∞ –¢–∞—Å–¥–∏“õ–ª–æ–≤—á–∏")
col1, col2 = st.columns(2)
with col1:
    st.text_input("–§.–ò.–û.", placeholder="–ò—Å–º–æ–∏–ª–æ–≤ –ê–Ω–≤–∞—Ä –ö–∞—Ä–∏–º–æ–≤–∏—á", key="main_fio")
    st.text_input("–õ–∞–≤–æ–∑–∏–º–∏", placeholder="–ë–æ—à –º—É—Ç–∞—Ö–∞—Å—Å–∏—Å", key="main_lavozim")
    st.text_input("–°–∞—Ñ–∞—Ä –º–∞–Ω–∑–∏–ª–∏ (–®–∞“≥–∞—Ä/–í–∏–ª–æ—è—Ç)", placeholder="–¢–æ—à–∫–µ–Ω—Ç —à–∞“≥—Ä–∏", key="main_manzil")
    st.text_input("–ò—á–∫–∏ –±—É–π—Ä—É“õ —Ä–∞“õ–∞–º–∏", placeholder="55-–•/–°", key="main_buyruq_raqami")
    st.date_input("–ë—É–π—Ä—É“õ —Å–∞–Ω–∞—Å–∏", value=st.session_state.main_buyruq_sanasi, format="DD.MM.YYYY", key="main_buyruq_sanasi")

with col2:
    st.date_input("–°–∞—Ñ–∞—Ä –±–æ—à–ª–∞–Ω–∏—à —Å–∞–Ω–∞—Å–∏", value=st.session_state.main_safar_boshlanish, format="DD.MM.YYYY", key="main_safar_boshlanish")
    st.date_input("–°–∞—Ñ–∞—Ä —Ç—É–≥–∞—à —Å–∞–Ω–∞—Å–∏", value=st.session_state.main_safar_tugash, format="DD.MM.YYYY", key="main_safar_tugash")
    st.markdown("---")
    st.text_input("–ë—û–ª–∏–º –±–æ—à–ª–∏“ì–∏ –ª–∞–≤–æ–∑–∏–º–∏", placeholder="–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏", key="main_bolim_boshligi_lavozimi")
    st.text_input("–ë—û–ª–∏–º –±–æ—à–ª–∏“ì–∏ –§.–ò.–û.", placeholder="–ê—Ö–º–µ–¥–æ–≤ –ë–∞—Ö—Ç–∏—ë—Ä –≠—Ä–∫–∏–Ω–æ–≤–∏—á", key="main_bolim_boshligi_fio")
    st.date_input("“≤–∏—Å–æ–±–æ—Ç —Å–∞–Ω–∞—Å–∏", value=st.session_state.main_hisobot_sanasi, format="DD.MM.YYYY", key="main_hisobot_sanasi")

st.divider()

# --- –Ø–ù–ì–ò: –£–º—É–º–∏–π “õ–∏—Å–º —É—á—É–Ω –º–∞—Ç–Ω –º–∞–π–¥–æ–Ω–∏ ---
st.subheader("üìÑ –£–º—É–º–∏–π “õ–∏—Å–º")
st.text_area(
    "–°–∞—Ñ–∞—Ä–Ω–∏–Ω–≥ –∞—Å–æ—Å–∏–π —Å–∞–±–∞–±–ª–∞—Ä–∏, —É–Ω–≥–∞—á–∞ –±—û–ª–≥–∞–Ω —Ç–∞—Ñ—Å–∏–ª–æ—Ç–ª–∞—Ä –≤–∞ –æ–º–∏–ª–ª–∞—Ä “≥–∞“õ–∏–¥–∞ —ë–∑–∏–Ω–≥.",
    key="main_umumiy_qism",
    height=150
)

st.divider()

# --- –î–∏–Ω–∞–º–∏–∫ –ú–∞“õ—Å–∞–¥–ª–∞—Ä ---
st.subheader("üéØ –•–∏–∑–º–∞—Ç —Å–∞—Ñ–∞—Ä–∏–¥–∞–Ω –∞—Å–æ—Å–∏–π –º–∞“õ—Å–∞–¥–ª–∞—Ä")
maqsadlar_container = st.container()
maqsadlar_to_remove = []
for i in range(len(st.session_state.maqsadlar)):
    row = maqsadlar_container.columns([0.9, 0.1])
    st.session_state.maqsadlar[i] = row[0].text_area(
        f"–ú–∞“õ—Å–∞–¥ {i+1}", value=st.session_state.maqsadlar[i], key=f"maqsad_{i}",
        height=50, label_visibility="collapsed", placeholder=f"{i+1}-–º–∞“õ—Å–∞–¥–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥..."
    )
    if row[1].button("‚ùå", key=f"remove_maqsad_{i}", help="–£—à–±—É –º–∞“õ—Å–∞–¥–Ω–∏ —û—á–∏—Ä–∏—à"):
         maqsadlar_to_remove.append(i)

if maqsadlar_to_remove:
    for index in sorted(maqsadlar_to_remove, reverse=True):
         del st.session_state.maqsadlar[index]
    st.rerun()

if st.button("‚ûï –ú–∞“õ—Å–∞–¥ “õ—û—à–∏—à", key="add_maqsad"):
    st.session_state.maqsadlar.append("")
    st.rerun()

st.divider()

# --- –î–∏–Ω–∞–º–∏–∫ –ö—É–Ω–ª–∏–∫ “≤–∏—Å–æ–±–æ—Ç–ª–∞—Ä ---
st.subheader("üóìÔ∏è –•–∏–∑–º–∞—Ç —Å–∞—Ñ–∞—Ä–∏ –¥–∞–≤–æ–º–∏–¥–∞ –∞–º–∞–ª–≥–∞ –æ—à–∏—Ä–∏–ª–≥–∞–Ω –∏—à–ª–∞—Ä (–∫—É–Ω–ª–∞—Ä –±—û–π–∏—á–∞)")
hisobot_container = st.container()
hisobotlar_to_remove = []

for i in range(len(st.session_state.kunlik_hisobotlar)):
    with hisobot_container.container(border=True):
         cols_hisobot_header = st.columns([0.85, 0.15])
         with cols_hisobot_header[0]:
             cols_hisobot = st.columns([1, 1])
             with cols_hisobot[0]:
                 st.session_state.kunlik_hisobotlar[i]['kun_nomi'] = st.text_input(
                     "–ö—É–Ω –Ω–æ–º–∏", value=st.session_state.kunlik_hisobotlar[i].get('kun_nomi', f'{i+1}-–∫—É–Ω'),
                     key=f"kun_nomi_{i}", label_visibility="collapsed", placeholder=f"{i+1}-–∫—É–Ω –Ω–æ–º–∏"
                 )
             with cols_hisobot[1]:
                 st.session_state.kunlik_hisobotlar[i]['kun_sanasi'] = st.date_input(
                     "–°–∞–Ω–∞", value=st.session_state.kunlik_hisobotlar[i].get('kun_sanasi'),
                     key=f"kun_sana_{i}", format="DD.MM.YYYY", label_visibility="collapsed"
                 )

         if cols_hisobot_header[1].button("‚ùå –é—á–∏—Ä–∏—à", key=f"remove_hisobot_{i}", help="–£—à–±—É –∫—É–Ω “≥–∏—Å–æ–±–æ—Ç–∏–Ω–∏ —û—á–∏—Ä–∏—à"):
             hisobotlar_to_remove.append(i)

         st.session_state.kunlik_hisobotlar[i]['tavsif'] = st.text_area(
             "–ë–∞–∂–∞—Ä–∏–ª–≥–∞–Ω –∏—à–ª–∞—Ä —Ç–∞–≤—Å–∏—Ñ–∏", value=st.session_state.kunlik_hisobotlar[i].get('tavsif', ''),
             key=f"kun_tavsif_{i}", height=100, label_visibility="collapsed", placeholder="–ë–∞–∂–∞—Ä–∏–ª–≥–∞–Ω –∏—à–ª–∞—Ä —Ç–∞–≤—Å–∏—Ñ–∏..."
         )

if hisobotlar_to_remove:
    for index in sorted(hisobotlar_to_remove, reverse=True):
         del st.session_state.kunlik_hisobotlar[index]
    st.rerun()

if st.button("‚ûï –ö—É–Ω “õ—û—à–∏—à", key="add_kun"):
     next_day_num = len(st.session_state.kunlik_hisobotlar) + 1
     kun_nomi_default = f"{next_day_num}-–∫—É–Ω"
     last_date = None
     if st.session_state.kunlik_hisobotlar:
         valid_dates = [entry.get('kun_sanasi') for entry in st.session_state.kunlik_hisobotlar if entry.get('kun_sanasi') is not None]
         if valid_dates:
              last_entry_date = max(valid_dates)
              try: last_date = last_entry_date + datetime.timedelta(days=1)
              except TypeError: last_date = None
     st.session_state.kunlik_hisobotlar.append({'kun_nomi': kun_nomi_default, 'kun_sanasi': last_date, 'tavsif': ''})
     st.rerun()

st.divider()

# --- –î–∏–Ω–∞–º–∏–∫ –°–∞—Ñ–∞—Ä –ù–∞—Ç–∏–∂–∞–ª–∞—Ä–∏ ---
st.subheader("üìä –°–∞—Ñ–∞—Ä –Ω–∞—Ç–∏–∂–∞–ª–∞—Ä–∏")
natijalar_container = st.container()
natijalar_to_remove = []
for i in range(len(st.session_state.safar_natijalari)):
    row = natijalar_container.columns([0.9, 0.1])
    st.session_state.safar_natijalari[i] = row[0].text_area(
        f"–ù–∞—Ç–∏–∂–∞ {i+1}", value=st.session_state.safar_natijalari[i], key=f"natija_{i}",
        height=50, label_visibility="collapsed", placeholder=f"{i+1}-–Ω–∞—Ç–∏–∂–∞–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥..."
    )
    if row[1].button("‚ùå", key=f"remove_natija_{i}", help="–£—à–±—É –Ω–∞—Ç–∏–∂–∞–Ω–∏ —û—á–∏—Ä–∏—à"):
         natijalar_to_remove.append(i)

if natijalar_to_remove:
    for index in sorted(natijalar_to_remove, reverse=True):
         del st.session_state.safar_natijalari[index]
    st.rerun()

if st.button("‚ûï –ù–∞—Ç–∏–∂–∞ “õ—û—à–∏—à", key="add_natija"):
    st.session_state.safar_natijalari.append("")
    st.rerun()

st.divider()

# --- “≤–∏—Å–æ–±–æ—Ç–Ω–∏ –Ø—Ä–∞—Ç–∏—à –¢—É–≥–º–∞—Å–∏ ---
generate_button = st.button("‚úÖ “≤–∏—Å–æ–±–æ—Ç–Ω–∏ –Ø—Ä–∞—Ç–∏—à", key="generate_report_main", type="primary")

# --- “≤–∏—Å–æ–±–æ—Ç–Ω–∏ —è—Ä–∞—Ç–∏—à –≤–∞ —é–∫–ª–∞–± –æ–ª–∏—à –ª–æ–≥–∏–∫–∞—Å–∏ ---
if generate_button:
    # –ú–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä–Ω–∏ –π–∏“ì–∏—à (st.session_state –¥–∞–Ω –ö–ê–õ–ò–¢–õ–ê–† –æ—Ä“õ–∞–ª–∏)
    report_data = {
        'fio': st.session_state.get('main_fio', ''),
        'lavozim': st.session_state.get('main_lavozim', ''),
        'manzil': st.session_state.get('main_manzil', ''),
        'buyruq_raqami': st.session_state.get('main_buyruq_raqami', ''),
        'buyruq_sanasi': st.session_state.get('main_buyruq_sanasi'),
        'safar_boshlanish': st.session_state.get('main_safar_boshlanish'),
        'safar_tugash': st.session_state.get('main_safar_tugash'),
        'umumiy_qism': st.session_state.get('main_umumiy_qism', ''), # –Ø–ù–ì–ò: –£–º—É–º–∏–π “õ–∏—Å–º “õ–∏–π–º–∞—Ç–∏
        'bolim_boshligi_lavozimi': st.session_state.get('main_bolim_boshligi_lavozimi', ''),
        'bolim_boshligi_fio': st.session_state.get('main_bolim_boshligi_fio', ''),
        'hisobot_sanasi': st.session_state.get('main_hisobot_sanasi'),
        # –î–∏–Ω–∞–º–∏–∫ —Ä—û–π—Ö–∞—Ç–ª–∞—Ä
        'maqsadlar': [m for m in st.session_state.get('maqsadlar', []) if m.strip()],
        'safar_natijalari': [n for n in st.session_state.get('safar_natijalari', []) if n.strip()],
        'kunlik_hisobotlar': [k for k in st.session_state.get('kunlik_hisobotlar', []) if k.get('tavsif','').strip()],
    }

    fio_for_filename = st.session_state.get('main_fio', 'Noma\'lum')
    output_filename = f"Hisobot_{fio_for_filename.replace(' ', '_')}_{datetime.datetime.now().strftime('%Y%m%d')}.docx"

    st.info("‚è≥ “≤–∏—Å–æ–±–æ—Ç —è—Ä–∞—Ç–∏–ª–º–æ“õ–¥–∞, –∏–ª—Ç–∏–º–æ—Å –∫—É—Ç–∏–Ω–≥...")
    generated_file_buffer = generate_report(TEMPLATE_FILE, output_filename, report_data)

    if generated_file_buffer:
        st.success("üéâ “≤–∏—Å–æ–±–æ—Ç –º—É–≤–∞—Ñ—Ñ–∞“õ–∏—è—Ç–ª–∏ —è—Ä–∞—Ç–∏–ª–¥–∏!")
        st.download_button(
            label="üì• “≤–∏—Å–æ–±–æ—Ç–Ω–∏ –Æ–∫–ª–∞–± –û–ª–∏—à (.docx)",
            data=generated_file_buffer,
            file_name=output_filename,
            mime="application/vnd.openxmlformats-officedocument.wordprocessingml.document"
        )
    else:
        st.error("‚ùå “≤–∏—Å–æ–±–æ—Ç–Ω–∏ —è—Ä–∞—Ç–∏—à–¥–∞ —Ö–∞—Ç–æ–ª–∏–∫ —é–∑ –±–µ—Ä–¥–∏. –ö–æ–Ω—Å–æ–ª–¥–∞–≥–∏ —Ö–∞–±–∞—Ä–ª–∞—Ä–Ω–∏ –≤–∞ —à–∞–±–ª–æ–Ω —Ñ–∞–π–ª–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏–Ω–≥.")

